[MESSAGES CONTROL]
disable = attribute-defined-outside-init,
          bad-super-call,
          broad-except,
          cell-var-from-loop,
          consider-using-dict-items,
          dangerous-default-value,
          duplicate-code,
          expression-not-assigned,
          fixme,
          function-redefined,
          global-statement,
          import-error,
          import-outside-toplevel,
          inconsistent-return-statements,
          invalid-name,
          invalid-overridden-method,
          logging-format-interpolation,
          logging-fstring-interpolation,
          logging-not-lazy,
          missing-class-docstring,
          missing-function-docstring,
          missing-module-docstring,
          multiple-statements,
          no-else-continue,
          no-else-raise,
          no-else-return,
          no-member,
          pointless-statement,
          pointless-string-statement,
          protected-access,
          raise-missing-from,
          raising-non-exception,
          redefined-argument-from-local,
          redefined-builtin,
          redefined-outer-name,
          simplifiable-if-expression,
          superfluous-parens,
          too-few-public-methods,
          too-many-arguments,
          too-many-branches,
          too-many-format-args,
          too-many-instance-attributes,
          too-many-lines,
          too-many-locals,
          too-many-nested-blocks,
          too-many-public-methods,
          too-many-return-statements,
          too-many-statements,
          unbalanced-tuple-unpacking,
          ungrouped-imports,
          # This makes calls to open too cumbersome
          unspecified-encoding,
          # Not all integrations need all the arguments we pass to
          # their run function.
          unused-argument,
          consider-using-f-string,
          # This one matters - Python scoping messes up with our
          # global and multi-threading locks          
          global-variable-not-assigned

