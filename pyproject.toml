[project]
name = "qontract-reconcile"
dynamic = ["version"]
description = "Collection of tools to reconcile services with their desired state as defined in the app-interface DB."
authors = [{ name = "Red Hat App-SRE Team", email = "sd-app-sre@redhat.com" }]
license = { text = "Apache 2.0" }
readme = "README.md"
requires-python = "==3.11.*"
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
]
dependencies = [
    "anymarkup>=0.7.0,<0.9.0",
    # keep in sync with boto3-stubs in dependency-groups.type
    "boto3==1.34.94",
    "botocore==1.34.94",
    "Click>=7.0,<9.0",
    "croniter>=1.0.15,<1.1.0",
    "dateparser~=1.1.7",
    "deepdiff==6.7.1",
    "dnspython~=2.1",
    "dt==1.1.73",
    "filetype~=1.2.0",
    "gql==3.1.0",
    "hvac>=0.7.0,<0.8.0",
    "jenkins-job-builder~=4.3.0",
    "Jinja2>=2.10.1,<3.2.0",
    "jira~=3.1",
    "jsonpatch~=1.33",
    "jsonpath-ng==1.5.3",
    "jsonpath-rw>=1.4.0,<1.5.0",
    "jsonpointer~=2.4",
    "kubernetes~=24.0",
    "ldap3>=2.9.1,<2.10.0",
    "MarkupSafe==2.1.1",
    "networkx~=2.8",
    "parse==1.18.0",
    "prometheus-client~=0.8",
    "psycopg2-binary~=2.9",
    "pydantic~=1.10.6",
    "PyGithub>=1.58,<1.59",
    "pyjwt~=2.7",
    "pyOpenSSL~=23.0",
    "pypd>=1.1.0,<1.2.0",
    "python-gitlab==6.0.0",
    "requests-oauthlib~=1.3",
    "requests~=2.32",
    "rich>=13.3.0,<14.0.0",
    "ruamel.yaml>=0.17.22,<0.18.0",
    "semver~=3.0",
    "sendgrid>=6.4.8,<6.5.0",
    "sentry-sdk~=2.0",
    "slack_sdk>=3.10,<4.0",
    "sretoolbox~=2.6",
    "sshtunnel>=0.4.0",
    "tabulate>=0.8.6,<0.9.0",
    "terrascript==0.9.0",
    "toml>=0.10.0,<0.11.0",
    "UnleashClient~=5.11",
    "urllib3~=2.2",
    "websocket-client<0.55.0,>=0.35",
    "yamllint==1.34.0",
]

[dependency-groups]
debugger = ["debugpy ~=1.6.0"]
dev = [
    "anymarkup ~=0.8.1",
    # keep in sync project.dependencies.boto3
    "boto3-stubs[account,dynamodb,ec2,ecr,elb,iam,logs,organizations,rds,route53,s3,service-quotas,sqs,sts,support]==1.34.94",
    "kubernetes-stubs==22.6.0",
    "MarkupSafe ~=2.1.1",
    "moto[ec2,iam,logs,s3,route53] ~=5.1",
    "mypy ~=1.17.0",
    "pyfakefs ~=5.9",
    "pytest ~=8.4",
    "pytest-cov ~=6.2",
    "pytest-httpserver ~=1.1",
    "pytest-mock ~=3.6",
    "qenerate==0.8.0",
    "responses ~=0.25.0",
    "ruff ~=0.12.4",
    "smtpdfix ~=0.5.2",
    "snakeviz ~=2.2.2",
    "testslide ~=2.7.1",
    "types-click",
    "types-croniter",
    "types-dateparser",
    "types-Jinja2",
    "types-ldap3",
    "types-mock",
    "types-oauthlib",
    "types-psycopg2",
    "types-pyOpenSSL",
    "types-python-dateutil",
    "types-PyYAML",
    "types-requests-oauthlib",
    "types-requests",
    "types-tabulate",
    "types-toml",
]

[project.scripts]
app-interface-metrics-exporter = "tools.app_interface_metrics_exporter:main"
app-interface-reporter = "tools.app_interface_reporter:main"
glitchtip-access-reporter = "tools.glitchtip_access_reporter:main"
glitchtip-access-revalidation = "tools.glitchtip_access_revalidation:main"
app-sre-tekton-access-reporter = "tools.app_sre_tekton_access_reporter:main"
app-sre-tekton-access-revalidation = "tools.app_sre_tekton_access_revalidation:main"
qontract-cli = "tools.qontract_cli:root"
qontract-reconcile = "reconcile.cli:integration"
run-integration = "reconcile.run_integration:main"
saas-metrics-exporter = "tools.saas_metrics_exporter.main:main"
template-validation = "tools.template_validation:main"

[project.urls]
homepage = "https://github.com/app-sre/qontract-reconcile"
repository = "https://github.com/app-sre/qontract-reconcile"
documentation = "https://github.com/app-sre/qontract-reconcile"

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.hatch.build.targets.sdist]
# TODO: package_data={"reconcile": ["templates/*.j2", "gql_queries/*/*.gql"]},
only-include = ["reconcile", "tools"]
exclude = ["*.gql", "**/test/*"]

[tool.hatch.build.targets.wheel]
only-include = ["reconcile", "tools"]
exclude = ["*.gql", "**/test/*"]

[tool.uv-dynamic-versioning]
vcs = "git"
latest-tag = true
# do not add commit hash to version
metadata = false
# do not add dirty flag to version
dirty = false
# version git tag doesn't have a prefix
pattern = "default-unprefixed"
style = "pep440"
# X.Y.(Z+1)
bump = true

[tool.ruff]
line-length = 88
target-version = 'py311'
src = ["reconcile", "tools"]
extend-exclude = ["reconcile/gql_definitions"]
fix = true

[tool.ruff.format]
preview = true

[tool.ruff.lint]
preview = true

# defaults are ["E4", "E7", "E9", "F"]
extend-select = [
    # flake8 default rules
    "E1", # preview rule
    "E2", # preview rule
    "W",
    # isort
    "I",
    # pylint
    "PL",
    # pyupgrade
    "UP",
    # flake8-simply
    "SIM",
    # flake8-bugbear
    "B",
    # flake8-comprehensions
    "C4",
    # flake8-future-annotations
    "FA",
    # ruff special rules
    "RUF",
    # flake8-type-checking
    "TC",
    # Perflint
    "PERF",
    # refurb
    "FURB",
    # PEP8
    "N",
]
ignore = [
    "N811",    # Constant `xxx` imported as non-constant `xxx`
    "N817",    # CamelCase `xxx` imported as acronym `xxx`
    "PLR0904", # Too many public methods
    "PLR0911", # Too many return statements
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments
    "PLR0914", # Too many local variables
    "PLR0915", # Too many statements
    "PLR0917", # Too many positional arguments
    "PLR1702", # Too many nested blocks
    "PLR2004", # Magic value used in comparison
    "PLR6301", # Method XXX could be a function, class method, or static method
    "PLW1641", # Object does not implement `__hash__` method
    "PLW2901", # `for` loop variable `v` overwritten by assignment target
    "UP031",   # Use format specifiers instead of percent format
    "SIM102",  # Use a single `if` statement instead of nested `if` statements
    "B017",    #`pytest.raises(Exception)` should be considered evil
    "RUF005",  # Consider "...."instead of concatenation
    "RUF012",  # Mutable class attributes should be annotated with "typing.ClassVar"
    # Review later
    "FURB101", # Replace `open` with `pathlib.Path`
    "FURB103", # Replace `open` with `pathlib.Path`
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel"]

[tool.ruff.lint.isort]
known-first-party = ["reconcile", "tools"]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "pydantic.validator",
    "pydantic.root_validator",
]

[tool.coverage.run]
branch = true
omit = ["*/test/*"]

[tool.coverage.report]
fail_under = 60

[tool.mypy]
files = ["reconcile", "tools"]
plugins = ["pydantic.mypy"]
# More context here: https://github.com/python/mypy/issues/9091
# Ensure that methods without type definitions are still checked
# Ensure that ignore statements that are no longer doing anything are detected for cleanup
# Enable error codes in Mypy so that specific error codes can be ignored if needed
# Ensure that Python type hints have been defined
enable_error_code = ["truthy-bool", "redundant-expr"]
no_implicit_optional = true
check_untyped_defs = true
warn_unused_ignores = true
show_error_codes = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[[tool.mypy.overrides]]
# Below are all of the packages that don't implement stub packages. Mypy will throw an error if we don't ignore the
# missing imports. See: https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
module = [
    "anymarkup.*",
    "deepdiff.*",
    "dynatrace.*",
    "filetype.*",
    "hvac.*",
    "jenkins_jobs.*",
    "jsonpath_ng.*",
    "kubernetes.*",
    "networkx.*",
    "pygments.*",
    "pypd.*",
    "sendgrid.*",
    "sretoolbox.*",
    "sshtunnel.*",
    "terrascript.*",
]
ignore_missing_imports = true
