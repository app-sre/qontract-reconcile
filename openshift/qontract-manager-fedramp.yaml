---
# Source: qontract-reconcile/templates/template.yaml
apiVersion: v1
kind: Template
metadata:
  name: qontract-reconcile
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-integrations-manager
    annotations:
      ignore-check.kube-linter.io/minimum-three-replicas: "qontract-reconcile integrations are sharded and not replicated"
      ignore-check.kube-linter.io/no-readiness-probe: "qontract-reconcile integrations are not getting traffic"
      ignore-check.kube-linter.io/no-liveness-probe: "qontract-reconcile integrations are monitored for being stuck"
      ignore-check.kube-linter.io/unset-cpu-requirements: "no cpu limits"
    name: qontract-reconcile-integrations-manager
  spec:
    revisionHistoryLimit: 50
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-integrations-manager
    template:
      metadata:
        labels:
          app: qontract-reconcile-integrations-manager
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
          env:
          - name: GOOGLE_CHAT_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: google_chat.webhook_url
                name: app-interface
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              read_from_head true
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name integrations-manager
                auto_create_stream true
              </store>
              # only ship errors to Google Chat
              <store>
                @type rewrite_tag_filter
                <rule>
                  key message
                  pattern /^\[ERROR\]/
                  tag gchat
                </rule>
              </store>
            </match>
            <match gchat>
              @type teams
              webhook_url "${GOOGLE_CHAT_WEBHOOK_URL}&threadKey=${POD_NAME}"
              text "<%= Time.at(time) %> [${POD_NAME}] <%= record['message'] %>\n\n"
              buffered true
              <buffer>
                @type file
                path /fluentd/buffer

                flush_mode interval
                flush_interval 15s
                flush_at_shutdown true

                retry_max_times 0
                retry_wait 30

                disable_chunk_backup true
              </buffer>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: PREFIX_LOG_LEVEL
            value: "true"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: MANAGER_DRY_RUN
            value: ${MANAGER_DRY_RUN}
          - name: INTEGRATIONS_MANAGER_UPSTREAM
            value: "${INTEGRATIONS_MANAGER_UPSTREAM}"
          - name: INTEGRATIONS_MANAGER_IMAGE
            value: "${INTEGRATIONS_MANAGER_IMAGE}"
          - name: INTEGRATIONS_MANAGER_IMAGE_TAG_FROM_REF
            value: "${INTEGRATIONS_MANAGER_IMAGE_TAG_FROM_REF}"
          - name: INTEGRATION_NAME
            value: integrations-manager
          - name: INTEGRATION_EXTRA_ARGS
            value: "-i quay.io/app-sre/qontract-reconcile-fips"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          - name: KUBE_SA_TOKEN_PATH
            value: "${KUBE_SA_TOKEN_MOUNT_PATH}/${KUBE_SA_TOKEN_FILENAME}"
          - name: ENVIRONMENT_NAME
            value: "${ENVIRONMENT_NAME}"
          - name: IMAGE
            value: "${IMAGE}"
          - name: IMAGE_TAG
            value: "${IMAGE_TAG}"
          - name: BUSYBOX_IMAGE
            value: "${BUSYBOX_IMAGE}"
          - name: BUSYBOX_IMAGE_TAG
            value: "${BUSYBOX_IMAGE_TAG}"
          - name: BUSYBOX_IMAGE_PULL_POLICY
            value: "${BUSYBOX_IMAGE_PULL_POLICY}"
          - name: FLUENTD_IMAGE
            value: "${FLUENTD_IMAGE}"
          - name: FLUENTD_IMAGE_TAG
            value: "${FLUENTD_IMAGE_TAG}"
          - name: FLUENTD_IMAGE_PULL_POLICY
            value: "${FLUENTD_IMAGE_PULL_POLICY}"
          - name: CLOUDWATCH_SECRET
            value: "${CLOUDWATCH_SECRET}"
          - name: INTERNAL_CERTIFICATES_IMAGE
            value: "${INTERNAL_CERTIFICATES_IMAGE}"
          - name: INTERNAL_CERTIFICATES_IMAGE_TAG
            value: "${INTERNAL_CERTIFICATES_IMAGE_TAG}"
          - name: INTERNAL_CERTIFICATES_IMAGE_PULL_POLICY
            value: "${INTERNAL_CERTIFICATES_IMAGE_PULL_POLICY}"
          resources:
            limits:
              memory: ${INTEGRATIONS_MANAGER_MEMORY_LIMIT}
            requests:
              cpu: ${INTEGRATIONS_MANAGER_CPU_REQUEST}
              memory: ${INTEGRATIONS_MANAGER_MEMORY_REQUEST}
          volumeMounts:
          - name: tmp-dir
            mountPath: /tmp
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
          - name: qontract-reconcile-sa-token
            mountPath: ${KUBE_SA_TOKEN_MOUNT_PATH}
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            limits:
              memory: ${INTEGRATIONS_MANAGER_FLUENTD_MEMORY_LIMIT}
            requests:
              cpu: ${INTEGRATIONS_MANAGER_FLUENTD_CPU_REQUEST}
              memory: ${INTEGRATIONS_MANAGER_FLUENTD_MEMORY_REQUEST}
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
          - name: buffer
            mountPath: /fluentd/buffer
        volumes:
        - name: qontract-reconcile-sa-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 1800
                path: ${KUBE_SA_TOKEN_FILENAME}
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
        - name: tmp-dir
          emptyDir: { }
        - name: buffer
          emptyDir: {}
parameters:
- name: IMAGE
  value: quay.io/app-sre/qontract-reconcile
- name: IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE
  value: quay.io/app-sre/ubi8-ubi-minimal
- name: BUSYBOX_IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE_PULL_POLICY
  value: Always
- name: FLUENTD_IMAGE
  value: quay.io/app-sre/fluentd
- name: FLUENTD_IMAGE_TAG
  value: latest
- name: FLUENTD_IMAGE_PULL_POLICY
  value: Always
- name: ENVIRONMENT_NAME
  value: app-interface
- name: DRY_RUN
  value: --dry-run
- name: MANAGER_DRY_RUN
  value: --dry-run
- name: SLEEP_DURATION_SECS
  value: "300"
- name: APP_INTERFACE_SQS_SECRET_NAME
  value: app-interface-sqs
- name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
  value: app-sre
- name: AWS_CONFIG_SECRET_NAME
  value: app-interface-aws-config
- name: APP_INTERFACE_PROJECT_ID
  value: "0"
- name: USER_ID
  value: dummy
- name: KUBE_SA_TOKEN_MOUNT_PATH
  value: '/var/run/secrets/kubernetes.io/serviceaccount'
- name: KUBE_SA_TOKEN_FILENAME
  value: 'token'
- name: LOG_FILE
  value: "/fluentd/log/integration.log"
- name: SLACK_CHANNEL
  value: "sd-app-sre-reconcile-stage"
- name: SLACK_CHANNEL_TRIGGER
  value: "sd-app-sre-triggers-stage"
- name: SLACK_ICON_EMOJI
  value: ":bust_in_silhouette:"
- name: GITHUB_API
  value: 'http://github-mirror.github-mirror-stage.svc.cluster.local'
- name: CLOUDWATCH_SECRET
  value: app-interface-cloudwatch
- name: SENTRY_DSN
  value: ""
- name: SLOW_OC_RECONCILE_THRESHOLD
  value: "600"
- name: LOG_SLOW_OC_RECONCILE
  value: "false"
- name: USE_NATIVE_CLIENT
  value: ""
- name: INTERNAL_CERTIFICATES_IMAGE
  value: quay.io/app-sre/internal-redhat-ca
- name: INTERNAL_CERTIFICATES_IMAGE_TAG
  value: latest
- name: INTERNAL_CERTIFICATES_IMAGE_PULL_POLICY
  value: Always
- name: INTEGRATIONS_MANAGER_UPSTREAM
  value: ''
- name: INTEGRATIONS_MANAGER_IMAGE
  value: ''
- name: INTEGRATIONS_MANAGER_IMAGE_TAG_FROM_REF
  value: ''
- name: PUSHGATEWAY_SECRET_NAME
  value: push-gateway-auth-url
- name: INTEGRATIONS_MANAGER_MEMORY_LIMIT
  value: 600Mi
- name: INTEGRATIONS_MANAGER_CPU_REQUEST
  value: 200m
- name: INTEGRATIONS_MANAGER_MEMORY_REQUEST
  value: 300Mi
- name: INTEGRATIONS_MANAGER_FLUENTD_MEMORY_LIMIT
  value: 240Mi
- name: INTEGRATIONS_MANAGER_FLUENTD_CPU_REQUEST
  value: 15m
- name: INTEGRATIONS_MANAGER_FLUENTD_MEMORY_REQUEST
  value: 60Mi
