---
# Source: qontract-reconcile/templates/template.yaml
apiVersion: v1
kind: Template
metadata:
  name: qontract-reconcile
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-namespace-labels
    name: qontract-reconcile-openshift-namespace-labels
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-namespace-labels
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-namespace-labels
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-namespace-labels
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-namespace-labels
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${OPENSHIFT_NAMESPACE_LABELS_CPU_LIMIT}
              memory: ${OPENSHIFT_NAMESPACE_LABELS_MEMORY_LIMIT}
            requests:
              cpu: ${OPENSHIFT_NAMESPACE_LABELS_CPU_REQUEST}
              memory: ${OPENSHIFT_NAMESPACE_LABELS_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-namespaces
    name: qontract-reconcile-openshift-namespaces
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-namespaces
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-namespaces
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-namespaces
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-namespaces
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${OPENSHIFT_NAMESPACES_CPU_LIMIT}
              memory: ${OPENSHIFT_NAMESPACES_MEMORY_LIMIT}
            requests:
              cpu: ${OPENSHIFT_NAMESPACES_CPU_REQUEST}
              memory: ${OPENSHIFT_NAMESPACES_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-network-policies
    name: qontract-reconcile-openshift-network-policies
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-network-policies
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-network-policies
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-network-policies
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-network-policies
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${OPENSHIFT_NETWORK_POLICIES_CPU_LIMIT}
              memory: ${OPENSHIFT_NETWORK_POLICIES_MEMORY_LIMIT}
            requests:
              cpu: ${OPENSHIFT_NETWORK_POLICIES_CPU_REQUEST}
              memory: ${OPENSHIFT_NETWORK_POLICIES_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-resources
    name: qontract-reconcile-openshift-resources
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-resources
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-resources
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-resources
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-resources
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${OPENSHIFT_RESOURCES_CPU_LIMIT}
              memory: ${OPENSHIFT_RESOURCES_MEMORY_LIMIT}
            requests:
              cpu: ${OPENSHIFT_RESOURCES_CPU_REQUEST}
              memory: ${OPENSHIFT_RESOURCES_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-routes
    name: qontract-reconcile-openshift-routes
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-routes
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-routes
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-routes
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-routes
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${OPENSHIFT_ROUTES_CPU_LIMIT}
              memory: ${OPENSHIFT_ROUTES_MEMORY_LIMIT}
            requests:
              cpu: ${OPENSHIFT_ROUTES_CPU_REQUEST}
              memory: ${OPENSHIFT_ROUTES_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-vault-secrets
    name: qontract-reconcile-openshift-vault-secrets
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-vault-secrets
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-vault-secrets
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-vault-secrets
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-vault-secrets
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${OPENSHIFT_VAULT_SECRETS_CPU_LIMIT}
              memory: ${OPENSHIFT_VAULT_SECRETS_MEMORY_LIMIT}
            requests:
              cpu: ${OPENSHIFT_VAULT_SECRETS_CPU_REQUEST}
              memory: ${OPENSHIFT_VAULT_SECRETS_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-terraform-aws-route53
    name: qontract-reconcile-terraform-aws-route53
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-terraform-aws-route53
    template:
      metadata:
        labels:
          app: qontract-reconcile-terraform-aws-route53
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name terraform-aws-route53
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-aws-route53
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${TERRAFORM_AWS_ROUTE53_CPU_LIMIT}
              memory: ${TERRAFORM_AWS_ROUTE53_MEMORY_LIMIT}
            requests:
              cpu: ${TERRAFORM_AWS_ROUTE53_CPU_REQUEST}
              memory: ${TERRAFORM_AWS_ROUTE53_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-terraform-resources
    name: qontract-reconcile-terraform-resources
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-terraform-resources
    template:
      metadata:
        labels:
          app: qontract-reconcile-terraform-resources
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name terraform-resources
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-resources
          - name: INTEGRATION_EXTRA_ARGS
            value: "--vault-output-path osd-fedramp/integrations-output"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${TERRAFORM_RESOURCES_CPU_LIMIT}
              memory: ${TERRAFORM_RESOURCES_MEMORY_LIMIT}
            requests:
              cpu: ${TERRAFORM_RESOURCES_CPU_REQUEST}
              memory: ${TERRAFORM_RESOURCES_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-terraform-tgw-attachments
    name: qontract-reconcile-terraform-tgw-attachments
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-terraform-tgw-attachments
    template:
      metadata:
        labels:
          app: qontract-reconcile-terraform-tgw-attachments
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name terraform-tgw-attachments
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-tgw-attachments
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${TERRAFORM_TGW_ATTACHMENTS_CPU_LIMIT}
              memory: ${TERRAFORM_TGW_ATTACHMENTS_MEMORY_LIMIT}
            requests:
              cpu: ${TERRAFORM_TGW_ATTACHMENTS_CPU_REQUEST}
              memory: ${TERRAFORM_TGW_ATTACHMENTS_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: qontract-reconcile-jenkins-job-builder
    name: qontract-reconcile-jenkins-job-builder
  spec:
    volumeClaimTemplates:
    - metadata:
        name: cache
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: gp2
        resources:
          requests:
            storage: 1Gi
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-jenkins-job-builder
    template:
      metadata:
        labels:
          app: qontract-reconcile-jenkins-job-builder
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name jenkins-job-builder
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: jenkins-job-builder
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${JENKINS_JOB_BUILDER_CPU_LIMIT}
              memory: ${JENKINS_JOB_BUILDER_MEMORY_LIMIT}
            requests:
              cpu: ${JENKINS_JOB_BUILDER_CPU_REQUEST}
              memory: ${JENKINS_JOB_BUILDER_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: cache
            mountPath: /.cache
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    labels:
      app: qontract-reconcile-jenkins-webhooks
    name: qontract-reconcile-jenkins-webhooks
  spec:
    volumeClaimTemplates:
    - metadata:
        name: cache
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: gp2
        resources:
          requests:
            storage: 1Gi
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-jenkins-webhooks
    template:
      metadata:
        labels:
          app: qontract-reconcile-jenkins-webhooks
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name jenkins-webhooks
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: jenkins-webhooks
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          resources:
            limits:
              cpu: ${JENKINS_WEBHOOKS_CPU_LIMIT}
              memory: ${JENKINS_WEBHOOKS_MEMORY_LIMIT}
            requests:
              cpu: ${JENKINS_WEBHOOKS_CPU_REQUEST}
              memory: ${JENKINS_WEBHOOKS_MEMORY_REQUEST}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: cache
            mountPath: /.cache
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: v1
  kind: Service
  metadata:
    name: qontract-reconcile
    labels:
      app: qontract-reconcile
  spec:
    ports:
      - protocol: TCP
        port: 80
        targetPort: 9090
        name: http
    selector:
      component: qontract-reconcile
parameters:
- name: IMAGE
  value: quay.io/app-sre/qontract-reconcile
- name: IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE
  value: quay.io/app-sre/ubi8-ubi-minimal
- name: BUSYBOX_IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE_PULL_POLICY
  value: Always
- name: FLUENTD_IMAGE
  value: quay.io/app-sre/fluentd
- name: FLUENTD_IMAGE_TAG
  value: latest
- name: FLUENTD_IMAGE_PULL_POLICY
  value: Always
- name: DRY_RUN
  value: --dry-run
- name: SLEEP_DURATION_SECS
  value: "300"
- name: APP_INTERFACE_SQS_SECRET_NAME
  value: app-interface-sqs
- name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
  value: app-sre
- name: APP_INTERFACE_PROJECT_ID
  value: "0"
- name: USER_ID
  value: dummy
- name: LOG_FILE
  value: "/fluentd/log/integration.log"
- name: SLACK_CHANNEL
  value: "sd-app-sre-reconcile-stage"
- name: SLACK_CHANNEL_TRIGGER
  value: "sd-app-sre-triggers-stage"
- name: SLACK_ICON_EMOJI
  value: ":bust_in_silhouette:"
- name: GITHUB_API
  value: 'http://github-mirror.github-mirror-stage.svc.cluster.local'
- name: CLOUDWATCH_SECRET
  value: app-interface-cloudwatch
- name: SENTRY_DSN
  value: ""
- name: SLOW_OC_RECONCILE_THRESHOLD
  value: "600"
- name: LOG_SLOW_OC_RECONCILE
  value: "false"
- name: USE_NATIVE_CLIENT
  value: ""
- name: INTERNAL_CERTIFICATES_IMAGE
  value: quay.io/app-sre/internal-redhat-ca
- name: INTERNAL_CERTIFICATES_IMAGE_TAG
  value: latest
- name: INTERNAL_CERTIFICATES_IMAGE_PULL_POLICY
  value: Always
- name: OPENSHIFT_NAMESPACE_LABELS_CPU_LIMIT
  value: 500m
- name: OPENSHIFT_NAMESPACE_LABELS_MEMORY_LIMIT
  value: 1040Mi
- name: OPENSHIFT_NAMESPACE_LABELS_CPU_REQUEST
  value: 400m
- name: OPENSHIFT_NAMESPACE_LABELS_MEMORY_REQUEST
  value: 800Mi
- name: OPENSHIFT_NAMESPACES_CPU_LIMIT
  value: 500m
- name: OPENSHIFT_NAMESPACES_MEMORY_LIMIT
  value: 1040Mi
- name: OPENSHIFT_NAMESPACES_CPU_REQUEST
  value: 400m
- name: OPENSHIFT_NAMESPACES_MEMORY_REQUEST
  value: 800Mi
- name: OPENSHIFT_NETWORK_POLICIES_CPU_LIMIT
  value: 200m
- name: OPENSHIFT_NETWORK_POLICIES_MEMORY_LIMIT
  value: 1040Mi
- name: OPENSHIFT_NETWORK_POLICIES_CPU_REQUEST
  value: 100m
- name: OPENSHIFT_NETWORK_POLICIES_MEMORY_REQUEST
  value: 800Mi
- name: OPENSHIFT_RESOURCES_CPU_LIMIT
  value: 1200m
- name: OPENSHIFT_RESOURCES_MEMORY_LIMIT
  value: 3600Mi
- name: OPENSHIFT_RESOURCES_CPU_REQUEST
  value: 900m
- name: OPENSHIFT_RESOURCES_MEMORY_REQUEST
  value: 1600Mi
- name: OPENSHIFT_ROUTES_CPU_LIMIT
  value: 300m
- name: OPENSHIFT_ROUTES_MEMORY_LIMIT
  value: 1040Mi
- name: OPENSHIFT_ROUTES_CPU_REQUEST
  value: 200m
- name: OPENSHIFT_ROUTES_MEMORY_REQUEST
  value: 800Mi
- name: OPENSHIFT_VAULT_SECRETS_CPU_LIMIT
  value: 1200m
- name: OPENSHIFT_VAULT_SECRETS_MEMORY_LIMIT
  value: 800Mi
- name: OPENSHIFT_VAULT_SECRETS_CPU_REQUEST
  value: 900m
- name: OPENSHIFT_VAULT_SECRETS_MEMORY_REQUEST
  value: 600Mi
- name: TERRAFORM_AWS_ROUTE53_CPU_LIMIT
  value: 500m
- name: TERRAFORM_AWS_ROUTE53_MEMORY_LIMIT
  value: 1000Mi
- name: TERRAFORM_AWS_ROUTE53_CPU_REQUEST
  value: 100m
- name: TERRAFORM_AWS_ROUTE53_MEMORY_REQUEST
  value: 500Mi
- name: TERRAFORM_RESOURCES_CPU_LIMIT
  value: 400m
- name: TERRAFORM_RESOURCES_MEMORY_LIMIT
  value: 700Mi
- name: TERRAFORM_RESOURCES_CPU_REQUEST
  value: 200m
- name: TERRAFORM_RESOURCES_MEMORY_REQUEST
  value: 500Mi
- name: TERRAFORM_TGW_ATTACHMENTS_CPU_LIMIT
  value: 600m
- name: TERRAFORM_TGW_ATTACHMENTS_MEMORY_LIMIT
  value: 3000Mi
- name: TERRAFORM_TGW_ATTACHMENTS_CPU_REQUEST
  value: 400m
- name: TERRAFORM_TGW_ATTACHMENTS_MEMORY_REQUEST
  value: 2300Mi
- name: JENKINS_JOB_BUILDER_CPU_LIMIT
  value: 200m
- name: JENKINS_JOB_BUILDER_MEMORY_LIMIT
  value: 400Mi
- name: JENKINS_JOB_BUILDER_CPU_REQUEST
  value: 100m
- name: JENKINS_JOB_BUILDER_MEMORY_REQUEST
  value: 200Mi
- name: JENKINS_WEBHOOKS_CPU_LIMIT
  value: 200m
- name: JENKINS_WEBHOOKS_MEMORY_LIMIT
  value: 200Mi
- name: JENKINS_WEBHOOKS_CPU_REQUEST
  value: 100m
- name: JENKINS_WEBHOOKS_MEMORY_REQUEST
  value: 100Mi
