---
# Source: qontract-reconcile/templates/template.yaml
apiVersion: v1
kind: Template
metadata:
  name: qontract-reconcile
objects:
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-aws-garbage-collector
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: aws-garbage-collector
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 50m
              memory: 400Mi
            requests:
              cpu: 25m
              memory: 200Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-aws-iam-keys
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: aws-iam-keys
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 25m
              memory: 200Mi
            requests:
              cpu: 15m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-github
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[github] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name github
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: github
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 25m
              memory: 80Mi
            requests:
              cpu: 15m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-github-repo-invites
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[github-repo-invites] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name github-repo-invites
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: github-repo-invites
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 25m
              memory: 150Mi
            requests:
              cpu: 15m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-quay-membership
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[quay-membership] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name quay-membership
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: quay-membership
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 25m
              memory: 150Mi
            requests:
              cpu: 15m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-quay-mirror
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: quay-mirror
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 150Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-quay-repos
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[quay-repos] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name quay-repos
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: quay-repos
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 25m
              memory: 150Mi
            requests:
              cpu: 15m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-github-users
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: github-users
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: gitlab_pr_submitter_queue_url
            valueFrom:
              secretKeyRef:
                name: ${APP_INTERFACE_SQS_SECRET_NAME}
                key: gitlab_pr_submitter_queue_url
          resources:
            limits:
              cpu: 200m
              memory: 150Mi
            requests:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-jira-watcher
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: jira-watcher
          - name: INTEGRATION_EXTRA_ARGS
            value: "--io-dir /tmp/throughput/"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 25m
              memory: 200Mi
            requests:
              cpu: 15m
              memory: 80Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-github-scanner
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: github-scanner
          - name: INTEGRATION_EXTRA_ARGS
            value: "--thread-pool-size 1"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: gitlab_pr_submitter_queue_url
            valueFrom:
              secretKeyRef:
                name: ${APP_INTERFACE_SQS_SECRET_NAME}
                key: gitlab_pr_submitter_queue_url
          resources:
            limits:
              cpu: 500m
              memory: 1000Mi
            requests:
              cpu: 400m
              memory: 500Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-aws-support-cases-sos
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: aws-support-cases-sos
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: gitlab_pr_submitter_queue_url
            valueFrom:
              secretKeyRef:
                name: ${APP_INTERFACE_SQS_SECRET_NAME}
                key: gitlab_pr_submitter_queue_url
          resources:
            limits:
              cpu: 50m
              memory: 200Mi
            requests:
              cpu: 25m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-users
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-users] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-users
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-users
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 40m
              memory: 300Mi
            requests:
              cpu: 20m
              memory: 200Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-groups
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-groups] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-groups
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-groups
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 150m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-namespaces
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-namespaces
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 500m
              memory: 400Mi
            requests:
              cpu: 400m
              memory: 300Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-clusterrolebindings
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-clusterrolebindings] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-clusterrolebindings
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-clusterrolebindings
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 250m
              memory: 400Mi
            requests:
              cpu: 150m
              memory: 300Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-rolebindings
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-rolebindings] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-rolebindings
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-rolebindings
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 500m
              memory: 400Mi
            requests:
              cpu: 400m
              memory: 200Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-network-policies
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-network-policies] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-network-policies
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-network-policies
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-acme
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-acme] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-acme
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-acme
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-limitranges
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-limitranges
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 150m
              memory: 100Mi
            requests:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-resources
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-resources
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 1000m
              memory: 1200Mi
            requests:
              cpu: 600m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-serviceaccount-tokens
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-serviceaccount-tokens
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host --vault-output-path app-sre/integrations-output"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 200m
              memory: 600Mi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-terraform-resources
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[terraform-resources] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name terraform-resources
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-resources
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host --vault-output-path app-sre/integrations-output"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 500m
              memory: 1000Mi
            requests:
              cpu: 400m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-terraform-users
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[terraform-users] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name terraform-users
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-users
          - name: INTEGRATION_EXTRA_ARGS
            value: "--io-dir /tmp/throughput/"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 400m
              memory: 1500Mi
            requests:
              cpu: 200m
              memory: 1000Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-terraform-vpc-peerings
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-vpc-peerings
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 400m
              memory: 1000Mi
            requests:
              cpu: 200m
              memory: 600Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-ocm-groups
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-groups
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 25m
              memory: 200Mi
            requests:
              cpu: 15m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-ocm-clusters
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-clusters
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 25m
              memory: 200Mi
            requests:
              cpu: 15m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-ocm-aws-infrastructure-access
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-aws-infrastructure-access
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 200Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-email-sender
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[email-sender] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name email-sender
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: email-sender
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          resources:
            limits:
              cpu: 50m
              memory: 200Mi
            requests:
              cpu: 25m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-sentry-config
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[sentry-config] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name sentry-config
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: sentry-config
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 25m
              memory: 200Mi
            requests:
              cpu: 15m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-sql-query
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[sql-query] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name sql-query
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: sql-query
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          resources:
            limits:
              cpu: 50m
              memory: 200Mi
            requests:
              cpu: 25m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: extensions/v1beta1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile
    name: qontract-reconcile-openshift-performance-parameters
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile
    template:
      metadata:
        labels:
          app: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: quay.io/app-sre/busybox
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          - name: LOG_STREAM_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-performance-parameters] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name ${LOG_STREAM_NAME}
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          env:
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-performance-parameters
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            value: ${GITHUB_API}
          - name: LOG_FILE
            value: "${LOG_FILE}"
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: quay.io/app-sre/fluentd:latest
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
parameters:
- name: IMAGE
  value: quay.io/app-sre/qontract-reconcile
- name: IMAGE_TAG
  value: latest
- name: DRY_RUN
  value: --dry-run
- name: SLEEP_DURATION_SECS
  value: "300"
- name: APP_INTERFACE_SQS_SECRET_NAME
  value: app-interface-sqs
- name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
  value: app-sre
- name: USER_ID
  value: dummy
- name: LOG_FILE
  value: "/fluentd/log/integration.log"
- name: SLACK_CHANNEL
  value: "sd-app-sre-reconcile-stage"
- name: SLACK_ICON_EMOJI
  value: ":bust_in_silhouette:"
- name: GITHUB_API
  value: 'http://github-mirror.github-mirror-stage.svc.cluster.local'
- name: CLOUDWATCH_SECRET
  value: app-interface-cloudwatch
