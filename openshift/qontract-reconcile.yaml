---
# Source: qontract-reconcile/templates/template.yaml
apiVersion: v1
kind: Template
metadata:
  name: qontract-reconcile
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-aws-route53
    name: qontract-reconcile-aws-route53
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-aws-route53
    template:
      metadata:
        labels:
          app: qontract-reconcile-aws-route53
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[aws-route53] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name aws-route53
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: aws-route53
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-aws-iam-keys
    name: qontract-reconcile-aws-iam-keys
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-aws-iam-keys
    template:
      metadata:
        labels:
          app: qontract-reconcile-aws-iam-keys
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[aws-iam-keys] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name aws-iam-keys
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: aws-iam-keys
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-github
    name: qontract-reconcile-github
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-github
    template:
      metadata:
        labels:
          app: qontract-reconcile-github
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[github] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name github
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: github
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 130Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-github-owners
    name: qontract-reconcile-github-owners
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-github-owners
    template:
      metadata:
        labels:
          app: qontract-reconcile-github-owners
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[github-owners] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name github-owners
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: github-owners
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 80Mi
            requests:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-github-repo-invites
    name: qontract-reconcile-github-repo-invites
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-github-repo-invites
    template:
      metadata:
        labels:
          app: qontract-reconcile-github-repo-invites
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[github-repo-invites] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name github-repo-invites
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: github-repo-invites
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 150Mi
            requests:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-quay-membership
    name: qontract-reconcile-quay-membership
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-quay-membership
    template:
      metadata:
        labels:
          app: qontract-reconcile-quay-membership
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[quay-membership] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name quay-membership
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: quay-membership
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 150Mi
            requests:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-quay-mirror
    name: qontract-reconcile-quay-mirror
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-quay-mirror
    template:
      metadata:
        labels:
          app: qontract-reconcile-quay-mirror
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name quay-mirror
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: quay-mirror
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 300m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 150Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-gcr-mirror
    name: qontract-reconcile-gcr-mirror
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-gcr-mirror
    template:
      metadata:
        labels:
          app: qontract-reconcile-gcr-mirror
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name gcr-mirror
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: gcr-mirror
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 300m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 150Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-quay-repos
    name: qontract-reconcile-quay-repos
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-quay-repos
    template:
      metadata:
        labels:
          app: qontract-reconcile-quay-repos
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[quay-repos] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name quay-repos
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: quay-repos
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 150Mi
            requests:
              cpu: 100m
              memory: 50Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-jira-watcher
    name: qontract-reconcile-jira-watcher
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-jira-watcher
    template:
      metadata:
        labels:
          app: qontract-reconcile-jira-watcher
          component: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: jira-watcher
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 80Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-unleash-watcher
    name: qontract-reconcile-unleash-watcher
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-unleash-watcher
    template:
      metadata:
        labels:
          app: qontract-reconcile-unleash-watcher
          component: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: unleash-watcher
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 80Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-github-scanner
    name: qontract-reconcile-github-scanner
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-github-scanner
    template:
      metadata:
        labels:
          app: qontract-reconcile-github-scanner
          component: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: github-scanner
          - name: INTEGRATION_EXTRA_ARGS
            value: "--thread-pool-size 1"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          - name: gitlab_pr_submitter_queue_url
            valueFrom:
              secretKeyRef:
                name: ${APP_INTERFACE_SQS_SECRET_NAME}
                key: gitlab_pr_submitter_queue_url
          resources:
            limits:
              cpu: 800m
              memory: 1000Mi
            requests:
              cpu: 600m
              memory: 500Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-aws-support-cases-sos
    name: qontract-reconcile-aws-support-cases-sos
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-aws-support-cases-sos
    template:
      metadata:
        labels:
          app: qontract-reconcile-aws-support-cases-sos
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name aws-support-cases-sos
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: aws-support-cases-sos
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          - name: gitlab_pr_submitter_queue_url
            valueFrom:
              secretKeyRef:
                name: ${APP_INTERFACE_SQS_SECRET_NAME}
                key: gitlab_pr_submitter_queue_url
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-users
    name: qontract-reconcile-openshift-users
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-users
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-users
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-users] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-users
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-users
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 500m
              memory: 1040Mi
            requests:
              cpu: 400m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-upgrade-watcher
    name: qontract-reconcile-openshift-upgrade-watcher
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-upgrade-watcher
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-upgrade-watcher
          component: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-upgrade-watcher
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 200Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-groups
    name: qontract-reconcile-openshift-groups
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-groups
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-groups
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-groups] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-groups
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-groups
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 300m
              memory: 780Mi
            requests:
              cpu: 200m
              memory: 600Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-namespaces
    name: qontract-reconcile-openshift-namespaces
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-namespaces
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-namespaces
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-namespaces] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-namespaces
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-namespaces
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 500m
              memory: 1040Mi
            requests:
              cpu: 400m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-clusterrolebindings
    name: qontract-reconcile-openshift-clusterrolebindings
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-clusterrolebindings
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-clusterrolebindings
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-clusterrolebindings] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-clusterrolebindings
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-clusterrolebindings
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 250m
              memory: 1040Mi
            requests:
              cpu: 150m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-rolebindings
    name: qontract-reconcile-openshift-rolebindings
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-rolebindings
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-rolebindings
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-rolebindings] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-rolebindings
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-rolebindings
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 800m
              memory: 1000Mi
            requests:
              cpu: 600m
              memory: 400Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-network-policies
    name: qontract-reconcile-openshift-network-policies-0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-network-policies
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-network-policies
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-network-policies] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-network-policies
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "4"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-network-policies
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 1040Mi
            requests:
              cpu: 100m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-network-policies
    name: qontract-reconcile-openshift-network-policies-1
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-network-policies
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-network-policies
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-network-policies] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-network-policies
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "4"
          - name: SHARD_ID
            value: "1"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-network-policies
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 1040Mi
            requests:
              cpu: 100m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-network-policies
    name: qontract-reconcile-openshift-network-policies-2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-network-policies
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-network-policies
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-network-policies] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-network-policies
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "4"
          - name: SHARD_ID
            value: "2"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-network-policies
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 1040Mi
            requests:
              cpu: 100m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-network-policies
    name: qontract-reconcile-openshift-network-policies-3
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-network-policies
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-network-policies
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-network-policies] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-network-policies
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "4"
          - name: SHARD_ID
            value: "3"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-network-policies
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 1040Mi
            requests:
              cpu: 100m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-limitranges
    name: qontract-reconcile-openshift-limitranges
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-limitranges
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-limitranges
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-limitranges] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-limitranges
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-limitranges
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 300m
              memory: 1040Mi
            requests:
              cpu: 200m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-resourcequotas
    name: qontract-reconcile-openshift-resourcequotas
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-resourcequotas
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-resourcequotas
          component: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-resourcequotas
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 1200m
              memory: 1200Mi
            requests:
              cpu: 900m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-resources
    name: qontract-reconcile-openshift-resources-0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-resources
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-resources
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-resources] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-resources
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "3"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-resources
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 1200m
              memory: 1200Mi
            requests:
              cpu: 900m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-resources
    name: qontract-reconcile-openshift-resources-1
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-resources
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-resources
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-resources] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-resources
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "3"
          - name: SHARD_ID
            value: "1"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-resources
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 1200m
              memory: 1200Mi
            requests:
              cpu: 900m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-resources
    name: qontract-reconcile-openshift-resources-2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-resources
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-resources
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-resources] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-resources
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "3"
          - name: SHARD_ID
            value: "2"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-resources
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 1200m
              memory: 1200Mi
            requests:
              cpu: 900m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-vault-secrets
    name: qontract-reconcile-openshift-vault-secrets-0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-vault-secrets
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-vault-secrets
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-vault-secrets
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "3"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-vault-secrets
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 1200m
              memory: 1200Mi
            requests:
              cpu: 900m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-vault-secrets
    name: qontract-reconcile-openshift-vault-secrets-1
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-vault-secrets
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-vault-secrets
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-vault-secrets
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "3"
          - name: SHARD_ID
            value: "1"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-vault-secrets
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 1200m
              memory: 1200Mi
            requests:
              cpu: 900m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-vault-secrets
    name: qontract-reconcile-openshift-vault-secrets-2
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-vault-secrets
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-vault-secrets
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-vault-secrets
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "3"
          - name: SHARD_ID
            value: "2"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-vault-secrets
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 1200m
              memory: 1200Mi
            requests:
              cpu: 900m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-routes
    name: qontract-reconcile-openshift-routes-0
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-routes
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-routes
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-routes
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "2"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-routes
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 300m
              memory: 1040Mi
            requests:
              cpu: 200m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-routes
    name: qontract-reconcile-openshift-routes-1
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-routes
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-routes
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-routes
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "2"
          - name: SHARD_ID
            value: "1"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-routes
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 300m
              memory: 1040Mi
            requests:
              cpu: 200m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-terraform-resources
    name: qontract-reconcile-terraform-resources
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-terraform-resources
    template:
      metadata:
        labels:
          app: qontract-reconcile-terraform-resources
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[terraform-resources] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name terraform-resources
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-resources
          - name: INTEGRATION_EXTRA_ARGS
            value: "--external --no-use-jump-host --vault-output-path app-sre/integrations-output"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 1200m
              memory: 1000Mi
            requests:
              cpu: 900m
              memory: 800Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-terraform-users
    name: qontract-reconcile-terraform-users
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-terraform-users
    template:
      metadata:
        labels:
          app: qontract-reconcile-terraform-users
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[terraform-users] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name terraform-users
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-users
          - name: INTEGRATION_EXTRA_ARGS
            value: "--io-dir /tmp/throughput/"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 400m
              memory: 1500Mi
            requests:
              cpu: 200m
              memory: 1000Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-terraform-vpc-peerings
    name: qontract-reconcile-terraform-vpc-peerings
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-terraform-vpc-peerings
    template:
      metadata:
        labels:
          app: qontract-reconcile-terraform-vpc-peerings
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[terraform-vpc-peerings] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name terraform-vpc-peerings
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: terraform-vpc-peerings
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 500m
              memory: 1000Mi
            requests:
              cpu: 400m
              memory: 600Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-ocm-groups
    name: qontract-reconcile-ocm-groups
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-ocm-groups
    template:
      metadata:
        labels:
          app: qontract-reconcile-ocm-groups
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name ocm-groups
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-groups
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-ocm-clusters
    name: qontract-reconcile-ocm-clusters
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-ocm-clusters
    template:
      metadata:
        labels:
          app: qontract-reconcile-ocm-clusters
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[ocm-clusters] %s\`\`\`"
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-clusters
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          - name: gitlab_pr_submitter_queue_url
            valueFrom:
              secretKeyRef:
                name: ${APP_INTERFACE_SQS_SECRET_NAME}
                key: gitlab_pr_submitter_queue_url
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-ocm-aws-infrastructure-access
    name: qontract-reconcile-ocm-aws-infrastructure-access
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-ocm-aws-infrastructure-access
    template:
      metadata:
        labels:
          app: qontract-reconcile-ocm-aws-infrastructure-access
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[ocm-aws-infrastructure-access] %s\`\`\`"
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-aws-infrastructure-access
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 50m
              memory: 200Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-ocm-github-idp
    name: qontract-reconcile-ocm-github-idp
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-ocm-github-idp
    template:
      metadata:
        labels:
          app: qontract-reconcile-ocm-github-idp
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name ocm-github-idp
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-github-idp
          - name: INTEGRATION_EXTRA_ARGS
            value: "--vault-input-path app-sre/integrations-input"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-ocm-machine-pools
    name: qontract-reconcile-ocm-machine-pools
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-ocm-machine-pools
    template:
      metadata:
        labels:
          app: qontract-reconcile-ocm-machine-pools
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[ocm-machine-pools] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name ocm-machine-pools
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-machine-pools
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-ocm-upgrade-scheduler
    name: qontract-reconcile-ocm-upgrade-scheduler
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-ocm-upgrade-scheduler
    template:
      metadata:
        labels:
          app: qontract-reconcile-ocm-upgrade-scheduler
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[ocm-upgrade-scheduler] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name ocm-upgrade-scheduler
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: ocm-upgrade-scheduler
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-email-sender
    name: qontract-reconcile-email-sender
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-email-sender
    template:
      metadata:
        labels:
          app: qontract-reconcile-email-sender
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[email-sender] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name email-sender
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: email-sender
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 50m
              memory: 200Mi
            requests:
              cpu: 25m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-requests-sender
    name: qontract-reconcile-requests-sender
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-requests-sender
    template:
      metadata:
        labels:
          app: qontract-reconcile-requests-sender
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[requests-sender] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name requests-sender
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: requests-sender
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 50m
              memory: 200Mi
            requests:
              cpu: 25m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-sentry-config
    name: qontract-reconcile-sentry-config
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-sentry-config
    template:
      metadata:
        labels:
          app: qontract-reconcile-sentry-config
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[sentry-config] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name sentry-config
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: sentry-config
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-sentry-helper
    name: qontract-reconcile-sentry-helper
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-sentry-helper
    template:
      metadata:
        labels:
          app: qontract-reconcile-sentry-helper
          component: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: sentry-helper
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 50m
              memory: 200Mi
            requests:
              cpu: 25m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-sql-query
    name: qontract-reconcile-sql-query
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-sql-query
    template:
      metadata:
        labels:
          app: qontract-reconcile-sql-query
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[sql-query] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name sql-query
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: sql-query
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 300m
              memory: 200Mi
            requests:
              cpu: 200m
              memory: 100Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-openshift-performance-parameters
    name: qontract-reconcile-openshift-performance-parameters
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-openshift-performance-parameters
    template:
      metadata:
        labels:
          app: qontract-reconcile-openshift-performance-parameters
          component: qontract-reconcile
      spec:
        initContainers:
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /HTTP Error 409: Conflict/
              </exclude>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[openshift-performance-parameters] %s\`\`\`"
              </store>
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name openshift-performance-parameters
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: openshift-performance-parameters
          - name: INTEGRATION_EXTRA_ARGS
            value: "--no-use-jump-host"
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 300Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: qontract-reconcile-slack-cluster-usergroups
    name: qontract-reconcile-slack-cluster-usergroups
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-slack-cluster-usergroups
    template:
      metadata:
        labels:
          app: qontract-reconcile-slack-cluster-usergroups
          component: qontract-reconcile
      spec:
        containers:
        - name: int
          image: ${IMAGE}:${IMAGE_TAG}
          ports:
            - name: http
              containerPort: 9090
          env:
          - name: SHARDS
            value: "1"
          - name: SHARD_ID
            value: "0"
          - name: DRY_RUN
            value: ${DRY_RUN}
          - name: INTEGRATION_NAME
            value: slack-cluster-usergroups
          - name: INTEGRATION_EXTRA_ARGS
            value: ""
          - name: SLEEP_DURATION_SECS
            value: ${SLEEP_DURATION_SECS}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 80Mi
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    labels:
      app: qontract-reconcile-aws-ecr-image-pull-secrets
    name: qontract-reconcile-aws-ecr-image-pull-secrets
  spec:
    schedule: "0 */2 * * *"
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - name: int
              image: ${IMAGE}:${IMAGE_TAG}
              env:
              - name: RUN_ONCE
                value: 'true'
              - name: DRY_RUN
                value: ${DRY_RUN}
              - name: INTEGRATION_NAME
                value: aws-ecr-image-pull-secrets
              - name: INTEGRATION_EXTRA_ARGS
                value: "--vault-output-path app-sre/integrations-output"
              - name: GITHUB_API
                valueFrom:
                  configMapKeyRef:
                    name: app-interface
                    key: GITHUB_API
              - name: UNLEASH_API_URL
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: API_URL
              - name: UNLEASH_CLIENT_ACCESS_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: CLIENT_ACCESS_TOKEN
              volumeMounts:
              - name: qontract-reconcile-toml
                mountPath: /config
              resources:
                limits:
                  cpu: 300m
                  memory: 200Mi
                requests:
                  cpu: 200m
                  memory: 100Mi
            restartPolicy: OnFailure
            volumes:
            - name: qontract-reconcile-toml
              secret:
                secretName: qontract-reconcile-toml
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    labels:
      app: qontract-reconcile-aws-garbage-collector
    name: qontract-reconcile-aws-garbage-collector
  spec:
    schedule: "0 0 * * 0"
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - name: int
              image: ${IMAGE}:${IMAGE_TAG}
              env:
              - name: RUN_ONCE
                value: 'true'
              - name: DRY_RUN
                value: ${DRY_RUN}
              - name: INTEGRATION_NAME
                value: aws-garbage-collector
              - name: INTEGRATION_EXTRA_ARGS
                value: ""
              - name: GITHUB_API
                valueFrom:
                  configMapKeyRef:
                    name: app-interface
                    key: GITHUB_API
              - name: UNLEASH_API_URL
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: API_URL
              - name: UNLEASH_CLIENT_ACCESS_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: CLIENT_ACCESS_TOKEN
              volumeMounts:
              - name: qontract-reconcile-toml
                mountPath: /config
              resources:
                limits:
                  cpu: 50m
                  memory: 400Mi
                requests:
                  cpu: 25m
                  memory: 200Mi
            restartPolicy: OnFailure
            volumes:
            - name: qontract-reconcile-toml
              secret:
                secretName: qontract-reconcile-toml
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    labels:
      app: qontract-reconcile-github-users
    name: qontract-reconcile-github-users
  spec:
    schedule: "0 0 1 * *"
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - name: int
              image: ${IMAGE}:${IMAGE_TAG}
              env:
              - name: RUN_ONCE
                value: 'true'
              - name: DRY_RUN
                value: ${DRY_RUN}
              - name: INTEGRATION_NAME
                value: github-users
              - name: INTEGRATION_EXTRA_ARGS
                value: "--send-mails"
              - name: GITHUB_API
                valueFrom:
                  configMapKeyRef:
                    name: app-interface
                    key: GITHUB_API
              - name: UNLEASH_API_URL
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: API_URL
              - name: UNLEASH_CLIENT_ACCESS_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: CLIENT_ACCESS_TOKEN
              - name: gitlab_pr_submitter_queue_url
                valueFrom:
                  secretKeyRef:
                    name: ${APP_INTERFACE_SQS_SECRET_NAME}
                    key: gitlab_pr_submitter_queue_url
              volumeMounts:
              - name: qontract-reconcile-toml
                mountPath: /config
              resources:
                limits:
                  cpu: 300m
                  memory: 150Mi
                requests:
                  cpu: 200m
                  memory: 50Mi
            restartPolicy: OnFailure
            volumes:
            - name: qontract-reconcile-toml
              secret:
                secretName: qontract-reconcile-toml
- apiVersion: batch/v1beta1
  kind: CronJob
  metadata:
    labels:
      app: qontract-reconcile-dashdotdb-cso
    name: qontract-reconcile-dashdotdb-cso
  spec:
    schedule: "0 */6 * * *"
    jobTemplate:
      spec:
        template:
          spec:
            containers:
            - name: int
              image: ${IMAGE}:${IMAGE_TAG}
              env:
              - name: RUN_ONCE
                value: 'true'
              - name: DRY_RUN
                value: ${DRY_RUN}
              - name: INTEGRATION_NAME
                value: dashdotdb-cso
              - name: INTEGRATION_EXTRA_ARGS
                value: ""
              - name: GITHUB_API
                valueFrom:
                  configMapKeyRef:
                    name: app-interface
                    key: GITHUB_API
              - name: UNLEASH_API_URL
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: API_URL
              - name: UNLEASH_CLIENT_ACCESS_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: CLIENT_ACCESS_TOKEN
              - name: DASHDOTDB_SECRET
                value: ${DASHDOTDB_SECRET}
              volumeMounts:
              - name: qontract-reconcile-toml
                mountPath: /config
              resources:
                limits:
                  cpu: 200m
                  memory: 600Mi
                requests:
                  cpu: 100m
                  memory: 400Mi
            restartPolicy: OnFailure
            volumes:
            - name: qontract-reconcile-toml
              secret:
                secretName: qontract-reconcile-toml
- apiVersion: v1
  kind: Service
  metadata:
    name: qontract-reconcile
    labels:
      app: qontract-reconcile
  spec:
    ports:
      - protocol: TCP
        port: 80
        targetPort: 9090
        name: http
    selector:
      component: qontract-reconcile
parameters:
- name: IMAGE
  value: quay.io/app-sre/qontract-reconcile
- name: IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE
  value: quay.io/app-sre/busybox
- name: BUSYBOX_IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE_PULL_POLICY
  value: Always
- name: FLUENTD_IMAGE
  value: quay.io/app-sre/fluentd
- name: FLUENTD_IMAGE_TAG
  value: latest
- name: FLUENTD_IMAGE_PULL_POLICY
  value: Always
- name: DRY_RUN
  value: --dry-run
- name: SLEEP_DURATION_SECS
  value: "300"
- name: APP_INTERFACE_SQS_SECRET_NAME
  value: app-interface-sqs
- name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
  value: app-sre
- name: USER_ID
  value: dummy
- name: LOG_FILE
  value: "/fluentd/log/integration.log"
- name: SLACK_CHANNEL
  value: "sd-app-sre-reconcile-stage"
- name: SLACK_ICON_EMOJI
  value: ":bust_in_silhouette:"
- name: GITHUB_API
  value: 'http://github-mirror.github-mirror-stage.svc.cluster.local'
- name: CLOUDWATCH_SECRET
  value: app-interface-cloudwatch
- name: SENTRY_DSN
  value: ""
- name: DASHDOTDB_SECRET
  value: "app-sre/dashdot/auth-proxy-production"
