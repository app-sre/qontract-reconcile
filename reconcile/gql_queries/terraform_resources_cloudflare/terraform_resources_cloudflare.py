"""
Generated by qenerate plugin=pydantic_v1. DO NOT MODIFY MANUALLY!
"""
from typing import Optional, Union  # noqa: F401 # pylint: disable=W0611

from pydantic import (  # noqa: F401 # pylint: disable=W0611
    BaseModel,
    Extra,
    Field,
    Json,
)


QUERY: str = """
# qenerate: plugin=pydantic_v1

query TerraformResourcesCloudflare {
  namespaces: namespaces_v1 {
    name
    externalResources {
      ... on NamespaceTerraformProviderResourceCloudflare_v1 {
        provider
        provisioner {
          name
          providerVersion
          apiCredentials {
            path
            field
          }
          terraformStateAccount {
            name
            automationToken {
              path
              field
            }
            terraformState {
              provider
              bucket
              region
              integrations {
                integration
                key
              }
            }
          }
        }
        resources {
          provider
          ... on NamespaceTerraformResourceCloudflareZone_v1
          {
            zone
            plan
            type
            settings
            records {
              name
              type
              ttl
              value
              proxied
            }
            workers {
              identifier
              pattern
              script {
                name
                content_inline
                content_file {
                  content
                }
              }
            }
          }
        }
      }
    }
  }
}

"""


class NamespaceExternalResourceV1(BaseModel):
    class Config:
        smart_union = True
        extra = Extra.forbid


class VaultSecretV1(BaseModel):
    path: str = Field(..., alias="path")
    field: str = Field(..., alias="field")

    class Config:
        smart_union = True
        extra = Extra.forbid


class AWSAccountV1_VaultSecretV1(BaseModel):
    path: str = Field(..., alias="path")
    field: str = Field(..., alias="field")

    class Config:
        smart_union = True
        extra = Extra.forbid


class AWSTerraformStateIntegrationsV1(BaseModel):
    integration: str = Field(..., alias="integration")
    key: str = Field(..., alias="key")

    class Config:
        smart_union = True
        extra = Extra.forbid


class TerraformStateAWSV1(BaseModel):
    provider: str = Field(..., alias="provider")
    bucket: str = Field(..., alias="bucket")
    region: str = Field(..., alias="region")
    integrations: Optional[list[AWSTerraformStateIntegrationsV1]] = Field(
        ..., alias="integrations"
    )

    class Config:
        smart_union = True
        extra = Extra.forbid


class AWSAccountV1(BaseModel):
    name: str = Field(..., alias="name")
    automation_token: AWSAccountV1_VaultSecretV1 = Field(..., alias="automationToken")
    terraform_state: Optional[TerraformStateAWSV1] = Field(..., alias="terraformState")

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareAccountV1(BaseModel):
    name: str = Field(..., alias="name")
    provider_version: str = Field(..., alias="providerVersion")
    api_credentials: VaultSecretV1 = Field(..., alias="apiCredentials")
    terraform_state_account: AWSAccountV1 = Field(..., alias="terraformStateAccount")

    class Config:
        smart_union = True
        extra = Extra.forbid


class NamespaceTerraformResourceCloudflareV1(BaseModel):
    provider: str = Field(..., alias="provider")

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareZoneRecordV1(BaseModel):
    name: str = Field(..., alias="name")
    q_type: str = Field(..., alias="type")
    ttl: int = Field(..., alias="ttl")
    value: str = Field(..., alias="value")
    proxied: Optional[bool] = Field(..., alias="proxied")

    class Config:
        smart_union = True
        extra = Extra.forbid


class ResourceV1(BaseModel):
    content: str = Field(..., alias="content")

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareZoneWorkerScriptV1(BaseModel):
    name: str = Field(..., alias="name")
    content_inline: Optional[str] = Field(..., alias="content_inline")
    content_file: Optional[ResourceV1] = Field(..., alias="content_file")

    class Config:
        smart_union = True
        extra = Extra.forbid


class CloudflareZoneWorkerV1(BaseModel):
    identifier: str = Field(..., alias="identifier")
    pattern: str = Field(..., alias="pattern")
    script: CloudflareZoneWorkerScriptV1 = Field(..., alias="script")

    class Config:
        smart_union = True
        extra = Extra.forbid


class NamespaceTerraformResourceCloudflareZoneV1(
    NamespaceTerraformResourceCloudflareV1
):
    zone: str = Field(..., alias="zone")
    plan: Optional[str] = Field(..., alias="plan")
    q_type: Optional[str] = Field(..., alias="type")
    settings: Optional[Json] = Field(..., alias="settings")
    records: Optional[list[CloudflareZoneRecordV1]] = Field(..., alias="records")
    workers: Optional[list[CloudflareZoneWorkerV1]] = Field(..., alias="workers")

    class Config:
        smart_union = True
        extra = Extra.forbid


class NamespaceTerraformProviderResourceCloudflareV1(NamespaceExternalResourceV1):
    provider: str = Field(..., alias="provider")
    provisioner: CloudflareAccountV1 = Field(..., alias="provisioner")
    resources: Optional[
        list[
            Union[
                NamespaceTerraformResourceCloudflareZoneV1,
                NamespaceTerraformResourceCloudflareV1,
            ]
        ]
    ] = Field(..., alias="resources")

    class Config:
        smart_union = True
        extra = Extra.forbid


class NamespaceV1(BaseModel):
    name: str = Field(..., alias="name")
    external_resources: Optional[
        list[
            Union[
                NamespaceTerraformProviderResourceCloudflareV1,
                NamespaceExternalResourceV1,
            ]
        ]
    ] = Field(..., alias="externalResources")

    class Config:
        smart_union = True
        extra = Extra.forbid


class TerraformResourcesCloudflareQueryData(BaseModel):
    namespaces: Optional[list[NamespaceV1]] = Field(..., alias="namespaces")

    class Config:
        smart_union = True
        extra = Extra.forbid
