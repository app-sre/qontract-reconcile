# qenerate: plugin=pydantic_v1
query TerraformCloudflareResources {
  namespaces: namespaces_v1 {
    name
    clusterAdmin
    cluster {
      name
      serverUrl
      insecureSkipTLSVerify
      jumpHost {
        ... CommonJumphostFields
      }
      automationToken {
        ... VaultSecret
      }
      clusterAdminAutomationToken {
        ... VaultSecret
      }
      spec {
        region
      }
      internal
      disable {
        integrations
        e2eTests
      }
    }
    managedExternalResources
    externalResources {
      ... on NamespaceTerraformProviderResourceCloudflare_v1 {
        provider
        provisioner {
          name
        }
        resources {
          provider
          ... on NamespaceTerraformResourceCloudflareWorkerScript_v1
          {
            identifier
            name
            content_from_github {
              repo
              path
              ref
            }
            vars {
              name
              text
            }
          }
          ... on NamespaceTerraformResourceCloudflareZone_v1
          {
            identifier
            zone
            plan
            type
            settings
            argo {
              smart_routing
              tiered_caching
            }
            cache_reserve {
              enabled
            }
            records {
              identifier
              name
              type
              ttl
              value
              proxied
            }
            workers {
              identifier
              pattern
              script_name
            }
            certificates {
              identifier
              type
              hosts
              validation_method
              validity_days
              certificate_authority
              cloudflare_branding
              wait_for_active_status
            }
          }
          ... on NamespaceTerraformResourceLogpushOwnershipChallenge_v1
          {
            destination_conf
            zone_name: zone
            identifier
          }
          ... on NamespaceTerraformResourceLogpushJob_v1
          {
            destination_conf
            zone_name: zone
            identifier
            enabled
            logpull_options
            ownership_challenge
            dataset
            frequency
          }
          ... on NamespaceTerraformResourceLogpullRetention_v1
          {
            zone
            enabled_flag: enabled
            identifier
          }
        }
      }
    }
  }
}
