---
apiVersion: v1
kind: Template
metadata:
  name: qontract-reconcile
objects:
{{- range $i, $integration := .Values.integrations }}
{{- $logs := $integration.logs | default dict -}}
{{- range $shard := $integration.shard_specs }}
- apiVersion: apps/v1
  {{- if $integration.cache }}
  kind: StatefulSet
  {{- else }}
  kind: Deployment
  {{- end }}
  metadata:
    labels:
      app: qontract-reconcile-{{ $integration.name }}
    annotations:
      ignore-check.kube-linter.io/minimum-three-replicas: "qontract-reconcile integrations are sharded and not replicated"
      ignore-check.kube-linter.io/no-readiness-probe: "qontract-reconcile integrations are not getting traffic"
      ignore-check.kube-linter.io/no-liveness-probe: "qontract-reconcile integrations are monitored for being stuck"
    name: qontract-reconcile-{{ $integration.name }}{{ $shard.shard_name_suffix }}
  spec:
    {{- if $integration.cache }}
    volumeClaimTemplates:
    - metadata:
        name: cache
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: gp2
        resources:
          requests:
            storage: {{ default "1Gi" $integration.storage }}
    {{- end }}
    revisionHistoryLimit: 50
    replicas: 1
    selector:
      matchLabels:
        app: qontract-reconcile-{{ $integration.name }}
    template:
      metadata:
        labels:
          app: qontract-reconcile-{{ $integration.name }}
          component: qontract-reconcile
      spec:
        serviceAccountName: qontract-reconcile
        initContainers:
        {{- if $integration.internalCertificates }}
        - name: internal-certificates
          image: ${INTERNAL_CERTIFICATES_IMAGE}:${INTERNAL_CERTIFICATES_IMAGE_TAG}
          imagePullPolicy: ${INTERNAL_CERTIFICATES_IMAGE_PULL_POLICY}
          command: ["/bin/sh", "-c"]
          args:
          - |
            cp -r /etc/pki/. /tmp/etc-pki/
          volumeMounts:
          - name: internal-certificates
            mountPath: /tmp/etc-pki/
        {{- end }}
        - name: config
          image: ${BUSYBOX_IMAGE}:${BUSYBOX_IMAGE_TAG}
          imagePullPolicy: ${BUSYBOX_IMAGE_PULL_POLICY}
          resources:
            requests:
              memory: 10Mi
              cpu: 15m
            limits:
              memory: 20Mi
              cpu: 25m
          env:
          {{- if $logs.slack }}
          - name: SLACK_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: slack.webhook_url
                name: app-interface
          {{- if $integration.trigger }}
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL_TRIGGER}
          {{- else }}
          - name: SLACK_CHANNEL
            value: ${SLACK_CHANNEL}
          {{- end }}
          - name: SLACK_ICON_EMOJI
            value: ${SLACK_ICON_EMOJI}
          {{- end }}
          {{- if $logs.googleChat }}
          - name: GOOGLE_CHAT_WEBHOOK_URL
            valueFrom:
              secretKeyRef:
                key: google_chat.webhook_url
                name: app-interface
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          {{- end }}
          - name: LOG_GROUP_NAME
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: log_group_name
          command: ["/bin/sh", "-c"]
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /using gql endpoint/
              </exclude>
            </filter>

            <filter integration>
              @type grep
              <exclude>
                key message
                pattern /Certificate did not match expected hostname/
              </exclude>
            </filter>

            <match integration>
              @type copy
              {{- if $logs.slack }}
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                {{- if $integration.trigger }}
                channel ${SLACK_CHANNEL_TRIGGER}
                {{- else }}
                channel ${SLACK_CHANNEL}
                {{- end }}
                icon_emoji ${SLACK_ICON_EMOJI}
                username sd-app-sre-bot
                flush_interval 10s
                message "\`\`\`[{{ $integration.name }}] %s\`\`\`"
              </store>
              {{- end }}
              {{- if $logs.googleChat }}
              <store>
                @type teams
                webhook_url "${GOOGLE_CHAT_WEBHOOK_URL}&threadKey=${POD_NAME}"
                text "<%= Time.at(time) %> [${POD_NAME}] <%= record['message'] %>\n\n"
              </store>
              {{- end }}
              <store>
                @type cloudwatch_logs
                log_group_name ${LOG_GROUP_NAME}
                log_stream_name {{ $integration.name }}
                auto_create_stream true
              </store>
            </match>
            EOF
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
        containers:
        - name: int
          {{- if $shard.imageRef }}
          image: ${IMAGE}:{{$shard.imageRef}}
          {{- else if $integration.imageRef}}
          image: ${IMAGE}:{{$integration.imageRef}}
          {{- else }}
          image: ${IMAGE}:${IMAGE_TAG}
          {{- end }}
          ports:
            - name: http
              containerPort: 9090
          env:
          {{- if $shard.shard_id }}
          - name: SHARDS
            value: "{{ $shard.shards }}"
          - name: SHARD_ID
            value: "{{ $shard.shard_id }}"
          {{- end }}
          {{- if $shard.shard_key }}
          - name: SHARD_KEY
            value: "{{ $shard.shard_key }}"
          {{- end }}
          - name: DRY_RUN
            value: ${DRY_RUN}
          {{- if eq $integration.name "integrations-manager" }}
          - name: MANAGER_DRY_RUN
            value: ${MANAGER_DRY_RUN}
          {{- end }}
          - name: INTEGRATION_NAME
            value: {{ $integration.name }}
          {{- with $shard.extra_args }}
          - name: INTEGRATION_EXTRA_ARGS
            value: "{{ $shard.extra_args }}"
          {{- end }}
          - name: SLEEP_DURATION_SECS
            {{- if $integration.sleepDurationSecs }}
            value: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_SLEEP_DURATION_SECS{{ "}" }}
            {{- else }}
            value: ${SLEEP_DURATION_SECS}
            {{- end }}
          - name: GITHUB_API
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: GITHUB_API
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: app-interface
                key: SENTRY_DSN
          - name: LOG_FILE
            value: "${LOG_FILE}"
          {{- if $integration.state }}
          - name: APP_INTERFACE_STATE_BUCKET
            valueFrom:
              secretKeyRef:
                name: app-interface
                key: aws.s3.bucket
          - name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
            value: "${APP_INTERFACE_STATE_BUCKET_ACCOUNT}"
          {{- end }}
          {{- if not $integration.disableUnleash }}
          - name: UNLEASH_API_URL
            valueFrom:
              secretKeyRef:
                name: unleash
                key: API_URL
          - name: UNLEASH_CLIENT_ACCESS_TOKEN
            valueFrom:
              secretKeyRef:
                name: unleash
                key: CLIENT_ACCESS_TOKEN
          {{- end }}
          - name: SLOW_OC_RECONCILE_THRESHOLD
            value: "${SLOW_OC_RECONCILE_THRESHOLD}"
          - name: LOG_SLOW_OC_RECONCILE
            value: "${LOG_SLOW_OC_RECONCILE}"
          - name: USE_NATIVE_CLIENT
            value: "${USE_NATIVE_CLIENT}"
          {{- if $integration.environmentAware }}
          - name: ENVIRONMENT_NAME
            value: "${ENVIRONMENT_NAME}"
          - name: IMAGE
            value: "${IMAGE}"
          - name: IMAGE_TAG
            value: "${IMAGE_TAG}"
          - name: BUSYBOX_IMAGE
            value: "${BUSYBOX_IMAGE}"
          - name: BUSYBOX_IMAGE_TAG
            value: "${BUSYBOX_IMAGE_TAG}"
          - name: BUSYBOX_IMAGE_PULL_POLICY
            value: "${BUSYBOX_IMAGE_PULL_POLICY}"
          - name: FLUENTD_IMAGE
            value: "${FLUENTD_IMAGE}"
          - name: FLUENTD_IMAGE_TAG
            value: "${FLUENTD_IMAGE_TAG}"
          - name: FLUENTD_IMAGE_PULL_POLICY
            value: "${FLUENTD_IMAGE_PULL_POLICY}"
          - name: CLOUDWATCH_SECRET
            value: "${CLOUDWATCH_SECRET}"
          - name: INTERNAL_CERTIFICATES_IMAGE
            value: "${INTERNAL_CERTIFICATES_IMAGE}"
          - name: INTERNAL_CERTIFICATES_IMAGE_TAG
            value: "${INTERNAL_CERTIFICATES_IMAGE_TAG}"
          - name: INTERNAL_CERTIFICATES_IMAGE_PULL_POLICY
            value: "${INTERNAL_CERTIFICATES_IMAGE_PULL_POLICY}"
          {{- end }}
          {{- with $integration.extraEnv }}
          {{- range $i, $env := . }}
          {{- if $env.secretKey }}
          - name: {{ $env.secretKey }}
            valueFrom:
              secretKeyRef:
                name: {{ $env.secretName }}
                key: {{ $env.secretKey }}
          {{- end }}
          {{- if $env.name }}
          - name: {{ $env.name }}
            value: {{ $env.value }}
          {{- end }}
          {{- end }}
          {{- end }}
          {{- if $integration.resources }}
          resources:
            {{- if $integration.resources.limits }}
            limits:
              {{- if $integration.resources.limits.cpu }}
              cpu: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_CPU_LIMIT{{ "}" }}
              {{- end }}
              {{- if $integration.resources.limits.memory }}
              memory: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_MEMORY_LIMIT{{ "}" }}
              {{- end }}
            {{- end }}
            {{- if $integration.resources.requests }}
            requests:
              {{- if $integration.resources.requests.cpu }}
              cpu: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_CPU_REQUEST{{ "}" }}
              {{- end }}
              {{- if $integration.resources.requests.memory }}
              memory: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_MEMORY_REQUEST{{ "}" }}
              {{- end }}
            {{- end }}
          {{- end }}
          volumeMounts:
          - name: qontract-reconcile-toml
            mountPath: /config
          {{- if $integration.cache }}
          - name: cache
            mountPath: /.cache
          {{- end }}
          {{- if $integration.internalCertificates }}
          - name: internal-certificates
            mountPath: /etc/pki/
          {{- end }}
          - name: logs
            mountPath: /fluentd/log/
        - name: fluentd
          image: ${FLUENTD_IMAGE}:${FLUENTD_IMAGE_TAG}
          imagePullPolicy: ${FLUENTD_IMAGE_PULL_POLICY}
          env:
          - name: AWS_REGION
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_region
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_access_key_id
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: ${CLOUDWATCH_SECRET}
                key: aws_secret_access_key
          resources:
            requests:
              memory: 30Mi
              cpu: 15m
            limits:
              memory: 120Mi
              cpu: 25m
          volumeMounts:
          - name: logs
            mountPath: /fluentd/log/
          - name: fluentd-config
            mountPath: /fluentd/etc/
        volumes:
        - name: qontract-reconcile-toml
          secret:
            secretName: qontract-reconcile-toml
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}
        {{- if $integration.internalCertificates }}
        - name: internal-certificates
          emptyDir: {}
        {{- end }}
{{- end }}
{{- end }}
{{- range $i, $integration := .Values.cronjobs }}
- apiVersion: batch/v1
  kind: CronJob
  metadata:
    labels:
      {{- if $integration.command }}
        {{- if eq $integration.command "e2e-tests" }}
      app: e2e-tests-{{ $integration.name }}
    name: e2e-tests-{{ $integration.name }}
        {{- else }}
      app: qontract-reconcile-{{ $integration.name }}
    name: qontract-reconcile-{{ $integration.name }} 
        {{- end }}
      {{- else }}
      app: qontract-reconcile-{{ $integration.name }}
    name: qontract-reconcile-{{ $integration.name }}
      {{- end }}
  spec:
    schedule: "{{ $integration.cron }}"
    concurrencyPolicy: {{ $integration.concurrencyPolicy | default "Allow" }}
    successfulJobsHistoryLimit: {{ if not (kindIs "invalid" $integration.successfulJobHistoryLimit) }}{{ $integration.successfulJobHistoryLimit }}{{ else }}{{ 3 }}{{ end }}
    failedJobsHistoryLimit: {{ if not (kindIs "invalid" $integration.failedJobHistoryLimit) }}{{ $integration.failedJobHistoryLimit }}{{ else }}{{ 1 }}{{ end }}
    jobTemplate:
      spec:
        template:
          spec:
            serviceAccountName: qontract-reconcile
            containers:
            - name: int
              image: ${IMAGE}:${IMAGE_TAG}
              env:
              - name: RUN_ONCE
                value: 'true'
              - name: DRY_RUN
                value: ${DRY_RUN}
              {{- if $integration.command }}
              - name: COMMAND_NAME
                value: {{ $integration.command }}
              {{- end }}
              - name: INTEGRATION_NAME
                value: {{ $integration.name }}
              {{- with $integration.extraArgs }}
              - name: INTEGRATION_EXTRA_ARGS
                value: "{{ $integration.extraArgs }}"
              {{- end }}
              - name: GITHUB_API
                valueFrom:
                  configMapKeyRef:
                    name: app-interface
                    key: GITHUB_API
              {{- if not $integration.disableUnleash }}
              - name: UNLEASH_API_URL
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: API_URL
              - name: UNLEASH_CLIENT_ACCESS_TOKEN
                valueFrom:
                  secretKeyRef:
                    name: unleash
                    key: CLIENT_ACCESS_TOKEN
              {{- end }}
              {{- with $integration.extraEnv }}
              {{- range $i, $env := . }}
              {{- if $env.secretKey}}
              - name: {{ $env.secretKey }}
                valueFrom:
                  secretKeyRef:
                    name: {{ $env.secretName }}
                    key: {{ $env.secretKey }}
              {{- end }}
              {{- if $env.name }}
              - name: {{ $env.name }}
                value: {{ $env.value }}
              {{- end }}
              {{- end }}
              {{- end }}
              {{- if $integration.dashdotdb }}
              - name: DASHDOTDB_SECRET
                valueFrom:
                  secretKeyRef:
                    name: dashdotdb
                    key: AUTH_VAULT_PATH
              {{- end }}
              volumeMounts:
              - name: qontract-reconcile-toml
                mountPath: /config
              {{- if $integration.resources }}
              resources:
                {{- if $integration.resources.limits }}
                limits:
                  {{- if $integration.resources.limits.cpu }}
                  cpu: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_CPU_LIMIT{{ "}" }}
                  {{- end }}
                  {{- if $integration.resources.limits.memory }}
                  memory: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_MEMORY_LIMIT{{ "}" }}
                  {{- end }}
                {{- end }}
                {{- if $integration.resources.requests }}
                requests:
                  {{- if $integration.resources.requests.cpu }}
                  cpu: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_CPU_REQUEST{{ "}" }}
                  {{- end }}
                  {{- if $integration.resources.requests.memory }}
                  memory: {{ "${" }}{{ $integration.name | upper | replace "-" "_" }}_MEMORY_REQUEST{{ "}" }}
                  {{- end }}
                {{- end }}
              {{- end }}
            restartPolicy: {{ $integration.restartPolicy | default "OnFailure" }}
            volumes:
            - name: qontract-reconcile-toml
              secret:
                secretName: qontract-reconcile-toml
{{- end }}
{{- if not .Values.excludeService }}
- apiVersion: v1
  kind: Service
  metadata:
    name: qontract-reconcile
    labels:
      app: qontract-reconcile
  spec:
    ports:
      - protocol: TCP
        port: 80
        targetPort: 9090
        name: http
    selector:
      component: qontract-reconcile
{{- end }}
parameters:
- name: IMAGE
  value: quay.io/app-sre/qontract-reconcile
- name: IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE
  value: quay.io/app-sre/ubi8-ubi-minimal
- name: BUSYBOX_IMAGE_TAG
  value: latest
- name: BUSYBOX_IMAGE_PULL_POLICY
  value: Always
- name: FLUENTD_IMAGE
  value: quay.io/app-sre/fluentd
- name: FLUENTD_IMAGE_TAG
  value: latest
- name: FLUENTD_IMAGE_PULL_POLICY
  value: Always
- name: ENVIRONMENT_NAME
  value: app-interface
- name: DRY_RUN
  value: --dry-run
- name: MANAGER_DRY_RUN
  value: --dry-run
- name: SLEEP_DURATION_SECS
  value: "300"
- name: APP_INTERFACE_SQS_SECRET_NAME
  value: app-interface-sqs
- name: APP_INTERFACE_STATE_BUCKET_ACCOUNT
  value: app-sre
- name: APP_INTERFACE_PROJECT_ID
  value: "0"
- name: USER_ID
  value: dummy
- name: LOG_FILE
  value: "/fluentd/log/integration.log"
- name: SLACK_CHANNEL
  value: "sd-app-sre-reconcile-stage"
- name: SLACK_CHANNEL_TRIGGER
  value: "sd-app-sre-triggers-stage"
- name: SLACK_ICON_EMOJI
  value: ":bust_in_silhouette:"
- name: GITHUB_API
  value: 'http://github-mirror.github-mirror-stage.svc.cluster.local'
- name: CLOUDWATCH_SECRET
  value: app-interface-cloudwatch
- name: SENTRY_DSN
  value: ""
- name: SLOW_OC_RECONCILE_THRESHOLD
  value: "600"
- name: LOG_SLOW_OC_RECONCILE
  value: "false"
- name: USE_NATIVE_CLIENT
  value: ""
- name: INTERNAL_CERTIFICATES_IMAGE
  value: quay.io/app-sre/internal-redhat-ca
- name: INTERNAL_CERTIFICATES_IMAGE_TAG
  value: latest
- name: INTERNAL_CERTIFICATES_IMAGE_PULL_POLICY
  value: Always
{{- range $i, $integration := .Values.integrations }}
{{- if $integration.sleepDurationSecs }}
- name: {{ $integration.name | upper | replace "-" "_" }}_SLEEP_DURATION_SECS
  value: {{ $integration.sleepDurationSecs | toString | quote }}
{{- end }}
{{- if $integration.resources }}
{{- if $integration.resources.limits }}
{{- if $integration.resources.limits.cpu }}
- name: {{ $integration.name | upper | replace "-" "_" }}_CPU_LIMIT
  value: {{ $integration.resources.limits.cpu }}
{{- end }}
{{- if $integration.resources.limits.memory }}
- name: {{ $integration.name | upper | replace "-" "_" }}_MEMORY_LIMIT
  value: {{ $integration.resources.limits.memory }}
{{- end }}
{{- end }}
{{- if $integration.resources.requests }}
{{- if $integration.resources.requests.cpu }}
- name: {{ $integration.name | upper | replace "-" "_" }}_CPU_REQUEST
  value: {{ $integration.resources.requests.cpu }}
{{- end }}
{{- if $integration.resources.requests.memory }}
- name: {{ $integration.name | upper | replace "-" "_" }}_MEMORY_REQUEST
  value: {{ $integration.resources.requests.memory }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- range $i, $integration := .Values.cronjobs }}
{{- if $integration.resources }}
{{- if $integration.resources.limits }}
{{- if $integration.resources.limits.cpu }}
- name: {{ $integration.name | upper | replace "-" "_" }}_CPU_LIMIT
  value: {{ $integration.resources.limits.cpu }}
{{- end }}
{{- if $integration.resources.limits.memory }}
- name: {{ $integration.name | upper | replace "-" "_" }}_MEMORY_LIMIT
  value: {{ $integration.resources.limits.memory }}
{{- end }}
{{- end }}
{{- if $integration.resources.requests }}
{{- if $integration.resources.requests.cpu }}
- name: {{ $integration.name | upper | replace "-" "_" }}_CPU_REQUEST
  value: {{ $integration.resources.requests.cpu }}
{{- end }}
{{- if $integration.resources.requests.memory }}
- name: {{ $integration.name | upper | replace "-" "_" }}_MEMORY_REQUEST
  value: {{ $integration.resources.requests.memory }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
